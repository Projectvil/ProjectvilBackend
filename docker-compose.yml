version: '3'
services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=projectvil
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=IdentityDb
    ports:
      - "5432:5432"
  web_gateway:
    build:
      context: ./WebGateway
      dockerfile: Dockerfile
    container_name: web_gateway
    ports:
      - '5093:80'
      - '7250:443'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web_gateway.rule=Host(`47.242.74.104`)"
      - "traefik.http.routers.web_gateway.entrypoints=web"
    volumes:
      - /https:/https
    depends_on:
      - postgres
  seq:
    container_name: seq
    image: datalust/seq:latest
    ports:
      - "5341:80"
    volumes:
      - seq-data:/data
    environment:
      - ACCEPT_EULA=Y
    restart: always
  auth_microservice:
    build:
      context: ./AuthMicroservice
      dockerfile: Dockerfile
    container_name: auth_microservice
    ports:
      - '5012:80'
      - '7055:443'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - /https:/https
    depends_on:
      - postgres
  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock